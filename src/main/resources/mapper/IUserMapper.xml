<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="iwishing.ccCommunity.community.mapper.IUserMapper">

<!--    插入github用户数据-->
<insert id="insertUserOfGithub" parameterType="User">
    insert into user (username, name, token, avatar, gmt_create, gmt_modified) values (#{username},#{name},#{token},#{avatar},#{gmtCreate},#{gmtModified});
</insert>

    <!--    插入用户数据-->
<insert id="insertUser" parameterType="User">
    insert into user (username, password,name, token, gmt_create, gmt_modified) values (#{username},#{password},#{name},#{token},#{gmtCreate},#{gmtModified});
</insert>

<!--    根据密令查找用户，用户使用GitHub登录后，如果存在cookie则直接登录-->
<select id="findByToken" resultType="User" parameterType="java.lang.String">
    select * from user where token=#{token};
</select>

<!--根据用户查找用户，如果用户使用登录正常登录，则执行登录操作-->
    <select id="findByUser" resultType="User" parameterType="User">
        select * from user where username=#{username} and password=#{password};
    </select>


    <resultMap id="findByUsernameMap" type="userDTO">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="password" column="password"></result>
        <result property="name" column="name"></result>
        <result property="token" column="token"></result>
        <result property="avatar" column="avatar"></result>
        <result property="gender" column="gender"></result>
        <result property="user_role" column="user_role"></result>
        <result property="gmtCreate" column="gmtCreate"></result>
        <result property="gmtModified" column="gmtModified"></result>
        <collection property="communityList" javaType="java.util.List" ofType="communityDTO">
            <id column="cid" property="community_id"></id>
            <result column="creator" property="creator"></result>
            <result column="communityName" property="communityName"></result>
            <result column="description" property="description"></result>
            <result column="avatar" property="avatar"></result>
            <result column="focus_count" property="focus_count"></result>
            <result column="post_count" property="post_count"></result>
            <result column="gmt_create" property="gmt_create"></result>
            <result column="gmt_modified" property="gmt_modified"></result>
        </collection>
    </resultMap>
<!--根据用户名查找用户，cookie登录需要-->
    <select id="findByUsername" resultMap="findByUsernameMap" parameterType="java.lang.Long">
        select user.*,c.communityName,c.id as cid,c.avatar,c.creator,c.description,c.focus_count,c.post_count,c.gmt_create,c.gmt_modified from user right join user_community
        on uid = user.id left join community as c on cid = c.id where user.username = #{username};
    </select>


<!--    根据用户id查找用户，查找帖子，需要封装一个创建者user-->
    <select id="findByUserId" parameterType="int" resultType="user">
        select * from user where id=#{userid};
    </select>
</mapper>